version: '3.8'

services:
  db:
    container_name: foodgram-db
    image: postgres:13
    environment:
      POSTGRES_DB: foodgram_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user -d foodgram_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-backend
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8005:8005"
    environment:
      - POSTGRES_DB=foodgram_db
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=mysecretpassword
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: